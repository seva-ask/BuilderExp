apply plugin: 'com.android.application'
apply plugin: 'findbugs'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.example.builderexp"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkAllWarnings true
        warningsAsErrors true
        xmlReport false
    }
}

dependencies {
    compile project(':libraries:base-library:base-library')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.1.1'
}

task findbugs(type: FindBugs, dependsOn: assembleRelease) {
    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File(System.getenv("FINDBUGS_HOME") + "/filters/findbugs-filter.xml")
    classes = files("${project.projectDir}/build/intermediates/classes")
    source = fileTree('src/main/java/')
    classpath = files()
    reports {
        xml.enabled = true
        xml {
            destination "$project.buildDir/findbugs/findbugs-output.xml"
        }
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Werror"
    }
    tasks.withType(FindBugs) {
        classpath = tasks.getByPath("compileReleaseJava").classpath +\
                    files(System.getenv("ANDROID_HOME") + "/platforms/" + android.compileSdkVersion + "/android.jar") +\
                    files(System.properties.'java.home' + "/lib/rt.jar")
    }
}
